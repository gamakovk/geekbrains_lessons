'''
Создать собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
'''


class MyZeroDivisionError(Exception):
    def __init__(self, txt=None):
        self.txt = txt if txt else 'Введенное значение не число'

    @staticmethod
    def check_num(string):
        try:
            float(string)
        except ValueError:
            raise MyZeroDivisionError
        else:
            try:
                int(string)
            except ValueError:
                pass
            else:
                return int(string)
            return float(string)


lst = []


def input_loop():
    inp = input('Введите число (для остановки введите "stop"):')
    if inp == 'stop':
        return 1
    try:
        inp_to_num = MyZeroDivisionError.check_num(inp)
    except MyZeroDivisionError as e:
        print(e.txt)
    else:
        lst.append(inp_to_num)


while True:
    if input_loop():
        print('Пока =)')
        print(lst)
        break